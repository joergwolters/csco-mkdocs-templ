# .gitignore defines files to ignore and remain untracked in Git
# Each line in a gitignore file specifies a pattern, eg. directory or file extension

# Git should not track binary artifacts such as images, libraries, executables, archive files etc.
# Until the team has mature processes, a Binary Artifacts Repository Manager is not in use.

# Therefore some binary artifacts are tracked in this Git repository


# Further .gitignore templates available at:
# https://github.com/github/gitignore

# macOS OS generated files
.DS_Store
._*
.Spotlight-V100
.Trashes

# Windows OS generated files #
Thumbs.db

# Compressed Archives
# git has built-in compression
# *.7z
# *.dmg
*.gz
# *.iso
# *.jar
# *.rar
# *.tar
# *.zip

# Binaries / Compiled source
# *.com
 *.class
# *.dll
# *.exe
# *.o
# *.so

# Logs and databases
# *.log
# *.sqlite

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# VSCode
.vscode
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Exclude security relevant context
SecretKey.txt
.bashrc
.zshrc
.env

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
# Pipfile.lock

# MkDocs documentation
site/

# MkDocs cache directory
.cache/
